/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Timestamper, TimestamperInterface } from "../Timestamper";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "hash",
        type: "uint256",
      },
    ],
    name: "Timestamp",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "hashes",
        type: "uint256[]",
      },
    ],
    name: "batchTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "end",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hash",
        type: "uint256",
      },
    ],
    name: "timestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610bd68061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631386dc121461006757806370a710e114610083578063715018a61461009f5780638da5cb5b146100a9578063efbe1c1c146100c7578063f2fde38b146100d1575b600080fd5b610081600480360381019061007c91906107e4565b6100ed565b005b61009d600480360381019061009891906107a3565b6101d8565b005b6100a76102e4565b005b6100b161036c565b6040516100be91906108aa565b60405180910390f35b6100cf610395565b005b6100eb60048036038101906100e6919061077a565b610431565b005b6100f5610529565b73ffffffffffffffffffffffffffffffffffffffff1661011361036c565b73ffffffffffffffffffffffffffffffffffffffff1614610169576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610915565b60405180910390fd5b6101a86040518060400160405280600d81526020017f54696d657374616d70696e673a0000000000000000000000000000000000000081525082610531565b807fcd41a3e784fc947ef5bbb922e2bd57447e5e3b389c45f5d24c210b1f82d7ebcc60405160405180910390a250565b6101e0610529565b73ffffffffffffffffffffffffffffffffffffffff166101fe61036c565b73ffffffffffffffffffffffffffffffffffffffff1614610254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024b90610915565b60405180910390fd5b60005b81518110156102e057818181518110610299577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101517fcd41a3e784fc947ef5bbb922e2bd57447e5e3b389c45f5d24c210b1f82d7ebcc60405160405180910390a280806102d890610a42565b915050610257565b5050565b6102ec610529565b73ffffffffffffffffffffffffffffffffffffffff1661030a61036c565b73ffffffffffffffffffffffffffffffffffffffff1614610360576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035790610915565b60405180910390fd5b61036a60006105cd565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61039d610529565b73ffffffffffffffffffffffffffffffffffffffff166103bb61036c565b73ffffffffffffffffffffffffffffffffffffffff1614610411576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040890610915565b60405180910390fd5b61041961036c565b73ffffffffffffffffffffffffffffffffffffffff16ff5b610439610529565b73ffffffffffffffffffffffffffffffffffffffff1661045761036c565b73ffffffffffffffffffffffffffffffffffffffff16146104ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a490610915565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561051d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610514906108f5565b60405180910390fd5b610526816105cd565b50565b600033905090565b6105c982826040516024016105479291906108c5565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610691565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60006106cd6106c88461095a565b610935565b905080838252602082019050828560208602820111156106ec57600080fd5b60005b8581101561071c57816107028882610765565b8452602084019350602083019250506001810190506106ef565b5050509392505050565b60008135905061073581610b72565b92915050565b600082601f83011261074c57600080fd5b813561075c8482602086016106ba565b91505092915050565b60008135905061077481610b89565b92915050565b60006020828403121561078c57600080fd5b600061079a84828501610726565b91505092915050565b6000602082840312156107b557600080fd5b600082013567ffffffffffffffff8111156107cf57600080fd5b6107db8482850161073b565b91505092915050565b6000602082840312156107f657600080fd5b600061080484828501610765565b91505092915050565b610816816109a2565b82525050565b600061082782610986565b6108318185610991565b93506108418185602086016109de565b61084a81610ae9565b840191505092915050565b6000610862602683610991565b915061086d82610afa565b604082019050919050565b6000610885602083610991565b915061089082610b49565b602082019050919050565b6108a4816109d4565b82525050565b60006020820190506108bf600083018461080d565b92915050565b600060408201905081810360008301526108df818561081c565b90506108ee602083018461089b565b9392505050565b6000602082019050818103600083015261090e81610855565b9050919050565b6000602082019050818103600083015261092e81610878565b9050919050565b600061093f610950565b905061094b8282610a11565b919050565b6000604051905090565b600067ffffffffffffffff82111561097557610974610aba565b5b602082029050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006109ad826109b4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156109fc5780820151818401526020810190506109e1565b83811115610a0b576000848401525b50505050565b610a1a82610ae9565b810181811067ffffffffffffffff82111715610a3957610a38610aba565b5b80604052505050565b6000610a4d826109d4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a8057610a7f610a8b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610b7b816109a2565b8114610b8657600080fd5b50565b610b92816109d4565b8114610b9d57600080fd5b5056fea2646970667358221220f091284bfa2cd0058ea52f4f0c2eea5bfb525e05faf464d50f1e654bf862b93464736f6c63430008040033";

export class Timestamper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Timestamper> {
    return super.deploy(overrides || {}) as Promise<Timestamper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Timestamper {
    return super.attach(address) as Timestamper;
  }
  connect(signer: Signer): Timestamper__factory {
    return super.connect(signer) as Timestamper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimestamperInterface {
    return new utils.Interface(_abi) as TimestamperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Timestamper {
    return new Contract(address, _abi, signerOrProvider) as Timestamper;
  }
}
